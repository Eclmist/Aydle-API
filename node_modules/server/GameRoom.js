function GameRoom()
{
    let games = [];
    let players = [];

    GameRoom.prototype.GetSelectedGames = function()
    {
        return games;
    }

    GameRoom.prototype.GetPlayers = function()
    {
        return players;
    }


    // a socket connection inside a room is a player object
    GameRoom.prototype.AddPlayer = function(socketID)
    {

        let temp = {

            // set playerID to be the socketID
            playerID : socketID,
            score : 0,
            isHost : false
        }

        players.push(temp);
        AssignNewHost();

    }

    GameRoom.prototype.RemovePlayer = function(socketID)
    {
        console.log("what is "+socketID);
        let index = GetIndexOfPlayerByID(socketID);
        
        // if player is found
        if(index > -1)
        {
            players.splice(index,1);
            AssignNewHost();
        }
    }

    // returns the index instead of the player object for efficient removal
    function GetIndexOfPlayerByID(playerID)
    {
       for(let i = 0; i < players.length; i++)
       {
           if(players[i].playerID === playerID)
           {
               return i;
           }
       }

       // no player found
       return -1;
    }

    function AssignNewHost()
    {
        // always set the first player in the room as host
        // the host will be the host
        // when the host leaves, the role is assigned to person that joined after the host
        players[0].isHost = true;
    }

}

module.exports = GameRoom;