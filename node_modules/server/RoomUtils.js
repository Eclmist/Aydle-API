function RoomUtils(){}


// Creates a game room that provides suppport for adding and removing of players
RoomUtils.CreateRoom = function(roomCode)
{
    let _code = roomCode;
    let _players = [];
    let _nameList = [];
    let _games = [];
    let _targetIndex = 0;
    let _isPlaying = false;

    let createdRoom =
    {
        code : _code,
        players : _players,
        nameList: _nameList,
        games : _games,
        targetIndex : _targetIndex,
        isPlaying : _isPlaying,
        AddPlayer : function(socketID,playerID,name)
        {
            let p = CreatePlayer(socketID,playerID);
            _nameList.push(name);
            p.name = this.MakeNameUnique(name);
            _players.push(p);
            this.AssignHost();
        },
        RemovePlayer : function(socketID)
        {
            let index = -1;

            for(let i = 0; i < _players.length; i++)
            {
                if(_players[i].socketID === socketID)
                {
                    index = i;
                    break;
                }
            }

            if(index > -1)
            {
                _players.splice(index,1);
                this.AssignHost();
            }
            
        },
        AssignHost : function()
        {
            if(_players.length > 0)
                _players[0].isHost = true;
        },
        GetCurrentTarget : function()
        {
            return _players[_targetIndex];
                
        },
        GetNextTarget : function()
        {
            if(_players.length > 0)
            {
                    
                // reset the target back to the first user if target index is out of bounds
                if((_targetIndex + 1) >= _players.length)
                {
                    _targetIndex = 0;
                }
                else
                {
                    _targetIndex++;
                }

                return _players[_targetIndex]
            }
        },
        GetPlayerByPlayerID: function(playerID)
        {
            for(let i = 0; i < _players.length; i++)
            {
                 if(_players[i].playerID === playerID)
                 {
                     return _players[i];
                 }
            }
 
            return undefined;
        },
        GetPlayerBySocketID : function(socketID)
        {
           for(let i = 0; i < _players.length; i++)
           {
                if(_players[i].socketID === socketID)
                {
                    return _players[i];
                }
           }

           return undefined;
        },
        GetHost : function()
        {
            for(let i = 0; i < _players.length; i++)
            {
                if(_players[i].isHost)
                    return _players[i];
            }
        },
        MakeNameUnique : function(name)
        {
            let count = 0;

            for(let i = 0; i < _nameList.length; i++)
            {
                if(name === _nameList[i])
                {
                    count++;
                }
            }

            if(count > 1)
                return name + " -" + count;
            else
                return name; 
            
        }
        
    }

    return createdRoom;

}

function CreatePlayer(socketID,playerID)
{
    let createdPlayer =
    {
        playerID : playerID,
        socketID : socketID,
        score : 0,
        isHost : false,
        name : "",
        connectedPlayers: 0
    }

    return createdPlayer;
}



module.exports = RoomUtils;