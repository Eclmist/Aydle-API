module.exports = function (socket,io) {
    
    let gameProps = 
    {
        secondsLeft : 20,
        challengeNumber: 0,
        answer: -1
    };

    if(socket.currentRoom.gameStateObject === undefined)
    {
        console.log('creating new game state object');
        socket.currentRoom.gameStateObject = gameProps;
    }
    else{
        console.log('game state detected');
    }

    socket.on('generate',function(callback)
    {
        socket.currentRoom.gameStateObject.answer = GetRandNumber(0,99);
        callback(answer);
    });

    socket.on('passBomb',function()
    {
        if(IsAnswerCorrect())
        {
            let state = socket.currentRoom.gameStateObject;
            state.secondsLeft = 20;
            state.challengeNumber = GetRandNumber(0,99);
            state.answer = GetRandNumber(0,99);
            socket.to(socket.currentRoom.GetNextTarget().socketID).emit(
                'holdingBomb',state.challengeNumber, state.answer, state.secondsLeft);
        }
        else
        {
            GameOver();
        }
        
    });
    
    function GetRandNumber(max, min) //both inclusive
    {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    function Tick()
    {
        let seconds = socket.currentRoom.gameStateObject.secondsLeft;

        seconds--;
        socket.emit('secondsLeft',seconds);
        if(seconds <= 0)
        {
            GameOver();
        }
    }

    function StartCountdown()
    {
        window.setTimeout(
            Tick(),
            1000)
    }

    function GameOver()
    {
        io.in(socket.currentRoom.code).emit('gameOver');
    }

    function IsAnswerCorrect()
    {
        return (answer === challengeNumber)
    }


    return module;
};