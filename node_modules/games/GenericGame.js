var SimpleGameLoop = require('AydleEngine/SimpleGameLoop');
var PlayerManager = require('AydleEngine/PlayerManager');

class GenericGame{
    constructor(){
        this.gameLoop = new SimpleGameLoop();
        this.io = undefined;
        this.roomCodeReference = undefined;
        this.playerManager = new PlayerManager();
    }

    setupGameHandlers(socket,io){
        // override game handlers here
        if(socket !== undefined){

            socket.on('disconnecting', (reason) => {
                this.playerManager.disconnectPlayer(socket.id);
            });

            if(this.roomCodeReference === undefined){
                this.roomCodeReference = socket.currentRoom.code;
            }
        }

        if(this.io === undefined && io !== undefined){
            this.io = io;
        }
    }

    addGameStateObjectProperty(propertyName, value){
        for(let i = 0; i < this.playerManager.players.length; i++){
            let currentPlayer = this.playerManager.players[i];
            currentPlayer.gameStateObject[propertyName] = value;
        }
    }

    runGameInstance(){
        this.gameLoop.setStart(()=>this.start());
        this.gameLoop.setUpdate(()=>this.update());
		this.gameLoop.run();
    }

    stopGameInstance(){  
        this.playerManager.sendFinalScores();
        process.exit(0);
    }

    getSocketObject(socketID){
        if(io !== undefined){
            return io.sockets.connected[socketID];
        }
    }
    
    start(){}
    update(){}
}

module.exports = GenericGame;