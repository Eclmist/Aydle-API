var Player = require('AydleEngine/Player');

class PlayerManager{
    constructor(){
        this.players = [];
        this.targetIndex = 0;
    }

    addPlayer(socketID, playerID){
        let player =  new Player(socketID, playerID);
        this.players.push();
    }

    getPlayerBySocketID(socketID){
        for(let i = 0; i < this.players.length; i++){
            if(this.players[i].socketID === socketID){
                return this.players[i];
            }
        }
        return undefined;
    }

    getPlayerByPlayerID(playerID){
        for(let i = 0; i < this.players.length; i++){
            if(this.players[i].playerID === playerID){
                return this.players[i];
            }
        }
        return undefined;
    }

    getNextTarget(){
        if(this.targetIndex < this.players.length){
            if(!this.players[i].hasDisconnected){
                return this.players[this.targetIndex++];
            } else {
                this.targetIndex++;
                return this.getNextTarget();   
            }
        } else {
            this.targetIndex = 0;
            return this.getNextTarget();
        }
    }

    addScoreToPlayer(socketID, amount){
        let player = this.getPlayerBySocketID(socketID);
        if(player !== undefined){
            player.score += amount;
        }
    }

    disconnectPlayer(socketID){
        let player = this.getPlayerBySocketID(socketID);
        if(player !== undefined){
            player.hasDisconnected = true;
        }
    }


    


}
module.exports = PlayerManager;